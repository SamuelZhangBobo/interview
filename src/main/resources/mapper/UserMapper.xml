<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.align.infrastructure.repository.mapper.UserMapper">
    <sql id="UserTableColumns">
        username,
        email,
        password,
        token,
        refreshToken,
        create_user_id,
        created_time,
        update_user_id,
        updated_time
    </sql>

    <select id="getAccount" parameterType="string" resultType="com.align.infrastructure.po.UserPo">
        select
            <include refid="UserTableColumns"/>
        from
            align.t_user
        where
            userName = #{userName}
    </select>

    <select id="getAccountByEmail" parameterType="string" resultType="com.align.infrastructure.po.UserPo">
        select
        <include refid="UserTableColumns"/>
        from
        align.t_user
        where
        email = #{emailAddress}
    </select>

    <select id="getFollowings" parameterType="string" resultType="com.align.controller.vo.UserDetailVo">
        select account.Username, account.Email
        from
        align.t_user as account, align.t_follow as follows
        where
        follows.follower_id = #{userId} and
        follows.followed_id = account.username
    </select>

    <select id="getFollowers" parameterType="string" resultType="com.align.controller.vo.UserDetailVo">
        select account.Username, account.Email
        from
        align.t_user as account, align.t_follow as follows
        where
        follows.followed_id = #{userId} and
        follows.follower_id = account.username
    </select>

    <insert id="insertAccount" parameterType="com.align.infrastructure.po.UserPo">
        insert into align.t_user
        (
            <include refid="UserTableColumns"/>
        )
        VALUES
        (
            #{account.username},
            #{account.email},
            #{account.password},
            #{account.token},
            #{account.refreshToken},
            #{account.createUserId},
            #{account.createdTime},
            #{account.updateUserId},
            #{account.updatedTime}
        )
    </insert>

    <insert id="followUsers">
        <foreach collection="followed" item="value">
            INSERT INTO align.t_follow (follower_id, followed_id) values
            (#{follower}, #{value})
        </foreach>
    </insert>

    <delete id="unfollowUsers">
        <foreach collection="unfollowed" item="value">
            DELETE FROM align.t_follow
            where follower_id = #{follower} and followed_id = #{value}
        </foreach>
    </delete>

    <update id="updateAccount" parameterType="com.align.infrastructure.po.UserPo">
        update align.t_user
        <set>
            <if test="account.token!= null">
                token = #{account.token},
            </if>
            <if test="account.refreshToken!= null">
                refreshToken = #{account.refreshToken},
            </if>
        </set>
        where username = #{account.username}
    </update>
</mapper>
